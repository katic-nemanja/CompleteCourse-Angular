ng generate component <ime komponente> - kreira novu Angular komponentu
ng g c <ime komponente> - skracena verzija - kreira novu Angular komponentu
ng generate component <ime komponente> --skip-tests - ovo je varijanta u kojoj se kreira komponenta bez kreiranja fajla za automatski test

CTRL + Space - IDE ce dati predloge automatskih funkcija

+<string varijabla>  - na ovaj nacin se vrsi konverzija iz Stringa u Number, npr: ime:string = '11'; broj:number = +ime; ovaj kod ce konvertovati string '11' u broj 11
                     - zasto je ovo vazna tehnika, zato sve input kontrole daju string vrednosti

@Input() avatar!:string; - uzvicnik govori da znamo da varijabla nema vrednost, ali da ce je dobiti u nekom trenutku
@Input({required:true}) <ime varijable>?:string; - ! kaze Typescriptu da se nikada nece desiti da varijabla ima vrednost UNDEFINED
@Input({required:true}) <ime varijable>?:string; - ? kaze Typescriptu da ova varijabla moze, a i ne mora imati vrednost i da sam sa tim upoznat

 result = this.rezultatZaPrikaz.resultData.asReadonly(); asReadonly je metod za rad nad signalima koji prosledjuje kao parametar ReadOnly signal koji nije moguce promeniti 
          iz klase kojoj se prosledjuje
 

<ime varijable>?.name - ovo kaze Typescriptu da ako je varijabla definisana (ima vrednost), pristupi property-ju name, a ako nije definisana, koristi UNDEFINED

@Input({required:true}) avatar!:string; - required:true ce svaki put u PARENT klasi ispaliti gresku ako zaboravimo da inicijalizujemo vrednost varijable "avatar"

@Input() <ime varijable>:string | undefined; - ovo je kod koji ce prihvatiti svaku vrednost varijable, jer ili ce biti tipa STRING ili UNDEFINED (ova vrednost je samo kada nema vrednost)
@Input('alijas') <ime varijable>:string; - preko alijasa mozemo da iniciramo u parent komponenti vrednost Input varijable bez pozivanja naziva varijable vec pisuci alijas

@Output() select = new EventEmitter<string>(); <string> predstavlja genericki tip podatka koji mozemo da prosledimo EventEmmiteru da bi samo takav podatak bio moguc za emitovanje
@Output('alijas') <ime varijable> = new EventEmitter<string>(); - preko alijasa mozemo da osluskujemo event u parent componentu ne navodeci naziv varijable, vec pisuci alijas

<app-user [avatar]="userList[0].avatar" [name]="userList[0].name" [id]="userList[0].id"
        (select)="onSelectUser($event)" /> - $event objekat je objekat koji moze da nosi podatak koji @Output() <varijabla> emituje